라이브러리와 프레임워크의 차이
주도권이 개발자에게 있다: 라이브러리
- 주도권을 개발자가 가짐
- 쓰고싶은 기술, 쓰고 싶은 도구를 마음대로
주도권이 개발자에게 없다 : 프레임워크
- 프레임워크가 허용하는 범위 내에서 써야함
- 큰틀은 정해져있음




//사전 렌더링(Pre Rendering) Next의 핵심
/**
 * 브라우저의 요청에 사전에 렌더링이 완료된 HTML을 응답하는 렌더링 방식
 * client sude rendering의 단점을 효율적으로 해결하는 기술
 * 
 * csr은 초기 접속 이후가 빠름 
 * First Contentful Paint - FCP
 * "요청 시작" 시점으로부터 컨텐츠가 화면에 처음 나타나는데 걸리는 시간
 * 리액트가 이게 느렸음
 * 
 * 그래서 등장한 NEXT.JS의 사전 렌더링
 * 서버에게 초기 요청을 보내면 서버가 JS코드를 직접 실행을 시켜서 렌더링 우리가 만든
 * 모든 컴포넌트들을 html을 렌더링 시키고
 * 그대로 브라우저 HTML을 보냄 그리고 브라우저는 유저에게 html을 렌더링
 * 그리고 바로 서버는 후속으로 바로 js bundle 코드를 브라우저로 보내 브라우저는 js를 html과 연결 
 * 그 다음 유저한테 보냄
 * 
 * 처음에는 화면만 먼저 보내고 후속으르 js를 보내 브라우저에서 연결 후 상호작용이 가능한 페이지를 만들고 유저한테 보냄
 * 여기서 html과 js를 연결해주는 것을 수화(Hydration)이라 함
 * 
 * 
 * 
 * 마지막으로 상호작용까지 가능한 상태를 tti라고 함
 * time to interective
 * 
 * 
 * 
 * 그러면 페이지 이동 요청은
 * 클라이언트 사이드 렌더링 방식으로 처리
 * 페이지 이동 요청을 하면 클라이언트 브라우저가 컴포넌트 교체 후
 * 페이지 교체한 걸 다시 유저한테 보냄
 */
